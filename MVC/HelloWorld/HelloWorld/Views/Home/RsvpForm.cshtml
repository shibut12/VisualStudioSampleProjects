@model HelloWorld.Models.GuestResponse

@{
    ViewBag.Title = "RsvpForm";
}

<h2>Rsvp Form</h2>
    @using (Html.BeginForm())
    {
        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(x => x.Name, htmlAttributes: new {@class = "control-label"})
                @Html.TextBoxFor(x => x.Name,htmlAttributes:new {@class="form-control"})
                @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Email)
                @Html.TextBoxFor(x => x.Email,htmlAttributes:new {@class="form-control"})
                @Html.ValidationMessageFor(x=>x.Email,"",new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Phone, htmlAttributes: new {@class = "control-label"})
                @Html.TextBoxFor(x => x.Phone,htmlAttributes:new {@class="form-control"})
                @Html.ValidationMessageFor(x=>x.Phone,"",new {@class="text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(x=>x.WillAttend)
                @Html.DropDownListFor(x => x.WillAttend, new[]
                {
                    new SelectListItem() {Text = "Yes, I'll be there", Value = bool.TrueString},
                    new SelectListItem() {Text = "No I cannot make it", Value = bool.FalseString}
                }, "Choose an option",htmlAttributes:new {@class="form-control"})
                @Html.ValidationMessageFor(x=>x.WillAttend,"",new {@class="text-danger"})
            </div>
            <input type="submit" value="Submit RSVP" class="btn btn-success" />
        </div>
        
    }
